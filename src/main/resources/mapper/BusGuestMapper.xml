<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cubic.api.mapper.BusGuestMapper">
  <resultMap id="BaseResultMap" type="com.cubic.api.model.BusGuest">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="guestname" jdbcType="VARCHAR" property="guestname" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="guestgrade" jdbcType="VARCHAR" property="guestgrade" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="heartprice" jdbcType="VARCHAR" property="heartprice" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="areas" jdbcType="VARCHAR" property="areas" />
    <result column="huxing" jdbcType="VARCHAR" property="huxing" />
    <result column="position" jdbcType="VARCHAR" property="position" />
    <result column="purpose" jdbcType="VARCHAR" property="purpose" />
    <result column="label" jdbcType="VARCHAR" property="label" />
    <result column="iskey" jdbcType="VARCHAR" property="iskey" />
    <result column="record_user_name" jdbcType="VARCHAR" property="recordUserName" />
    <result column="create_user_name" jdbcType="VARCHAR" property="createUserName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="collaboratorids" jdbcType="VARCHAR" property="collaboratorids" />
    <result column="record_time" jdbcType="TIMESTAMP" property="recordTime" />
    <result column="huxingshi" jdbcType="VARCHAR" property="huxingshi" />
    <result column="huxingting" jdbcType="VARCHAR" property="huxingting" />
    <result column="huxingwei" jdbcType="VARCHAR" property="huxingwei" />
    <result column="huxingchu" jdbcType="VARCHAR" property="huxingchu" />   
     <result column="record_rel_name" jdbcType="VARCHAR" property="recordRelName" />
    <result column="create_rel_name" jdbcType="VARCHAR" property="createRelName" />
      <result column="phonetow" jdbcType="VARCHAR" property="phonetow" />   
  </resultMap>
  
  
  
  <insert id="insertBusGuest" keyProperty="id" useGeneratedKeys="true" parameterType="com.cubic.api.model.BusGuest">
  INSERT INTO bus_guest
            (
             `guestname`,
             `sex`,
             `guestgrade`,
             `type`,
             `heartprice`,
             `phone`,
             `remarks`,
             `areas`,
             `huxing`,
             `position`,
             `purpose`,
             `label`,
             `iskey`,
             `record_user_name`,
             `create_user_name`,
             `create_time`,
              record_time,
              huxingshi,
              huxingting,
              huxingwei,
              huxingchu,
              record_rel_name,
              create_rel_name,
              phonetow
)	
  			VALUES (
  			#{guestname},
  			#{sex},
  			#{guestgrade},
  			#{type},
  			#{heartprice},
  			#{phone},
  			#{remarks},
  			#{areas},
  			#{huxing},
  			#{position},
  			#{purpose},
  			#{label},
  			0,
  			#{recordUserName},
  			#{createUserName},
  			NOW(),
  			NOW(),
  			#{huxingshi},
  			#{huxingting},
  			#{huxingwei},
  			#{huxingchu},
  			(SELECT relname FROM sys_user WHERE username=#{recordUserName}),
  			(SELECT relname FROM sys_user WHERE username=#{createUserName}),
  			#{phonetow}
  			)
  </insert>
  
  
  	 <update id="updateRecordTime" parameterType="com.cubic.api.model.BusGuest">
	 		UPDATE bus_guest
	 		SET record_time=NOW()
	 		WHERE 
	 			id=#{id}
	 </update>
	 
	 
	 <select id="listBusGuest" parameterType="map" resultMap="BaseResultMap">
	 				
				SELECT
				  bg.`id`,
				  bg.`number`,
				  bg.`guestname`,
				  bg.`sex`,
				  bg.`guestgrade`,
				  bg.`type`,
				  bg.`heartprice`,
				  bg.`remarks`,
				  bg.`areas`,
				  bg.`position`,
				  bg.`purpose`,
				  bg.`label`,
				  bg.`iskey`,
				  bg.`record_user_name`,
				  bg.`create_user_name`,
				  bg.`create_time`,
				  bg.`collaboratorids`,
				  bg.`record_time`,
				  bg.`huxingshi`,
				  bg.`huxingting`,
				  bg.`huxingwei`,
				  bg.`huxingchu`,
				  bg.`isshare`,
				  bg.record_rel_name,
                  bg.create_rel_name,
                  bg.phonetow
				FROM bus_guest bg
				<if test="role!=null and role == 4">
						LEFT JOIN sys_user su  ON su.username=#{username}
				</if>
				<where>
				1=1
					<if test="isShare ==null or isShare==0">
						<if test="role!=null and role != 4">
							and  bg.record_user_name=#{recordUserName}
						</if>
						<if test="role!=null and role == 4"><!-- 店长可以看本店全部人的客源 -->
							and  bg.record_user_name in (select username from sys_user where `store_id` = su.`store_id` )
						</if>
					</if>
					<if test="type!=null"><!-- 客源类型(0买,1租)-->
							and bg.type=#{type}
					</if>
					<if test="search_type==null or search_type==1">
						<if test="guestname!=null and guestname != ''"><!-- 客源姓名 -->
							and bg.guestname like "%"#{guestname}"%"
						</if>
					</if>
					<if test="search_type!=null and search_type==2">
						<if test="guestname!=null and guestname != ''"><!-- 经济人搜索条件 -->
							and (bg.record_rel_name=#{guestname} or bg.record_user_name=(select username from sys_user where user_no = "VK000"#{guestname}))
						</if>
					</if>

			
					<if test="isType==null or isType!=1"><!-- 不是共享池条件 -->
							and  bg.isshare='0'
					</if>
					<if test="isType!=null and isType==1"><!-- 是共享池条件 -->
							and  bg.isshare='1'
					</if>
					<if test="isType==null or isType!=2"><!-- 不是无效池条件 -->
							and bg.iskey<![CDATA[<>]]>'1'
					</if>
					<if test="isType!=null and isType==2"><!-- 是无效池条件 -->
							and bg.iskey='1'
					</if>	
		
				
					
					<if test="sex!=null"><!-- 客源性别 -->
							and bg.sex=#{sex}
					</if>
					
					<if test="guestgrade!=null and guestgrade != ''"><!-- 客源星级 -->
							and bg.guestgrade=#{guestgrade}
					</if>

					<if test="collaboratorName!=null"><!-- 查看当前登录人为合作人的客源-->
							and bg.collaboratorids like "%"#{recordUserName}"%"
					</if>
				</where>
	 </select>
	 
	 
	 <select id="listTransactionGuest" parameterType="map" resultMap="BaseResultMap"> 
	   SELECT 
			      `id`,
				  `number`,
				  `guestname`,
				   remarks,
				   record_user_name,
				   record_rel_name,
				   record_time,
				   create_time	 
	   FROM bus_guest
	   WHERE 
		   record_user_name=#{username}
		   AND  iskey!=1   
	    <if test="searchText !=null and searchText !=''"><!-- 搜索文本,模糊查询客源名称或客源编号 -->
	    	AND  (guestname like "%"#{searchText}"%" OR number like "%"#{searchText}"%")
	    </if>
	 </select>
	 
	 <update id="updateRecordUser" parameterType="com.cubic.api.model.BusGuest">
	  		UPDATE bus_guest b
	 		SET b.record_user_name=#{recordUserName},
		 		<if test="isshare!=null and isshare!=''">
		 		     b.isshare=#{isshare},
		 		</if>
	 			b.record_time=NOW(),
	 			b.record_rel_name=(select su.relname from sys_user su	where su.username=#{recordUserName})
	 		WHERE 
	 		  b.id=#{id}
	 
	 </update>
	 
	 <select id="listRecordTime" resultMap="BaseResultMap">
				SELECT bg.id,su.`username` record_user_name,
						(CASE 
							<![CDATA[WHEN TO_DAYS(NOW())-TO_DAYS(bg.record_time)=10 THEN '1']]>
							<![CDATA[WHEN TO_DAYS(NOW())-TO_DAYS(bg.record_time)>=15 THEN '2']]>
							END) casetype  
				FROM `bus_guest` bg 
				LEFT JOIN `sys_user` su  ON su.`username`=bg.`record_user_name`		
				LEFT JOIN sys_user_role sur ON su.id = sur.user_id AND sur.role_id = 2
				WHERE 
				<![CDATA[((TO_DAYS(NOW())-TO_DAYS(bg.record_time)) = 10	or TO_DAYS(NOW())-TO_DAYS(bg.record_time) = 15)]]>
				AND bg.isshare = '0'
				AND bg.iskey <![CDATA[<>]]>'1'
						
				
	 </select>
	 
	 <update id="updateIsShareNull"   parameterType="com.cubic.api.model.BusGuest">
	 		UPDATE bus_guest
	 		SET record_user_name=NULL,
	 			record_rel_name=NULL,
	 			isshare=1
	 		WHERE 
	 		 id=#{id}		 		
	 </update>
	 
	 <update id="updateAllocation" parameterType="map">
	 	UPDATE bus_guest
	 	 <choose>
		 	 	<when test="recordUserName!=null and recordUserName!=''">
				 	SET record_user_name=#{recordUserName},
				 		record_rel_name=(select relname from sys_user where username=#{recordUserName})
			 	</when>
			 	<when test="createUserName!=null and createUserName!=''">
			 	    SET create_user_name=#{createUserName},
				 		create_rel_name=(select relname from sys_user where username=#{createUserName})
			 	</when>
			 	<otherwise>
			 	SET record_user_name=record_user_name
			 	</otherwise>
	    </choose>
	    WHERE 
	    	id=#{id}
	 </update>
	 
	 <update id="updateGuestIsKeyDown" parameterType="com.cubic.api.model.BusGuest">
	 	UPDATE bus_guest
	 	SET record_user_name=NULL,
	 		record_rel_name=NULL,
	 		create_user_name=NULL,
	 		create_rel_name=NULL,
	 		iskey='1'
	 	WHERE 
	 		id=#{id}	
	 </update>
	 
	 <update id="updateGuestIsKeyUp" parameterType="map">
	 	UPDATE bus_guest bg
	 	LEFT JOIN `sys_user` su  ON su.`username`=#{userName}
	 	SET bg.record_user_name=su.username,
	 		bg.record_rel_name=su.relname,
	 		bg.create_user_name=su.username,
	 		bg.create_rel_name=su.relname,
	 		bg.iskey='0',
	 		bg.record_time=NOW(),
	 		bg.create_time=NOW()
	 	WHERE 
	 		bg.id=#{id}	
	 </update>
	 
</mapper>